plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.diffplug.spotless' version '6.21.0'
}

group = 'me.zubrilincp'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.2'
    implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.5.1'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
    testImplementation 'org.testcontainers:postgresql:1.18.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.18.3'
}

spotless {
    java {
        googleJavaFormat()
    }
}

sourceSets {
    testIntegration {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
    testSystem {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

task testIntegration(type: Test) {
    group = "verification"
    testClassesDirs = sourceSets.testIntegration.output.classesDirs
    classpath = sourceSets.testIntegration.runtimeClasspath
    useJUnitPlatform()
}

task testSystem(type: Test) {
    group = "verification"
    testClassesDirs = sourceSets.testSystem.output.classesDirs
    classpath = sourceSets.testSystem.runtimeClasspath
    useJUnitPlatform()
}

configurations {
    testIntegrationImplementation.extendsFrom(testImplementation)
    testIntegrationRuntimeOnly.extendsFrom(testRuntimeOnly)
    testSystemImplementation.extendsFrom(testImplementation)
    testSystemRuntimeOnly.extendsFrom(testRuntimeOnly)
}

tasks.named('test') {
    useJUnitPlatform()
}
tasks.named('check') {
    dependsOn(testIntegration)
    dependsOn(testSystem)
}
